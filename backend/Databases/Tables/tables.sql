DROP TABLE IF EXISTS users
DROP TABLE IF EXISTS Questions;
DROP TABLE IF EXISTS Answers;
DROP TABLE IF EXISTS Comments;
DROP TABLE IF EXISTS Tags;
DROP TABLE IF EXISTS QuestionTags;

CREATE TABLE users
(
    userId VARCHAR (100) NOT NULL PRIMARY KEY,
    username VARCHAR(200)NOT NULL,
    email VARCHAR(50) UNIQUE NOT NULL,
	role VARCHAR(10) NOT NULL DEFAULT 'user',
    password VARCHAR(200)NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Questions
(
    questionId VARCHAR(100) NOT NULL PRIMARY KEY,
    userId VARCHAR(100) NOT NULL,
    title VARCHAR(255) NOT NULL,
    body VARCHAR(MAX) NOT NULL,
    upvotes INT NOT NULL DEFAULT 0,
    downvotes INT NOT NULL DEFAULT 0,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE
);

CREATE TABLE Answers
(
    answerId VARCHAR(100) NOT NULL PRIMARY KEY,
    userId VARCHAR(100) NOT NULL,
    questionId VARCHAR(100),
    title VARCHAR(255) NOT NULL,
    body VARCHAR(MAX) NOT NULL,
    upvotes INT NOT NULL DEFAULT 0,
    downvotes INT NOT NULL DEFAULT 0,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(userId),
    FOREIGN KEY (questionId) REFERENCES Questions(questionId) ON DELETE CASCADE
);

CREATE TABLE Comments
(
    commentId VARCHAR(100) NOT NULL PRIMARY KEY,
    userId VARCHAR(100) NOT NULL,
    questionId VARCHAR(100),
    answerId VARCHAR(100),
    body VARCHAR(MAX) NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(userId),
    FOREIGN KEY (questionId) REFERENCES Questions(questionId),
    FOREIGN KEY (answerId) REFERENCES Answers(answerId) ON DELETE CASCADE
);

CREATE TABLE Tags
(
    tagId VARCHAR(100) NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    body VARCHAR(MAX) NOT NULL
);

CREATE TABLE QuestionTags
(
    questionId VARCHAR(100),
    tagId VARCHAR(100) NOT NULL,
    PRIMARY KEY (questionId, tagId),
    FOREIGN KEY (questionId) REFERENCES Questions(questionId) ON DELETE CASCADE,
    FOREIGN KEY (tagId) REFERENCES Tags(tagId) ON DELETE CASCADE
);

CREATE TABLE Votes
(
    voteId INT PRIMARY KEY,
    userId VARCHAR(100) NOT NULL,
    questionId VARCHAR(100),
    answerId VARCHAR(100),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (userId) REFERENCES users(userId),
    FOREIGN KEY (questionId) REFERENCES Questions(questionId),
    FOREIGN KEY (answerId) REFERENCES Answers(answerId) ON DELETE CASCADE
);